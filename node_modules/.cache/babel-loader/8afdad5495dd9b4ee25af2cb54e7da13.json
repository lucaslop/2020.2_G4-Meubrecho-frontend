{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '../../../services/api';\nimport history from '../../../services/history';\nimport { signInSuccess, signFailure } from './actions';\nexport function* signIn({\n  payload\n}) {\n  try {\n    const {\n      email,\n      senha\n    } = payload;\n    const response = yield call(api.post, 'sessions', {\n      email,\n      senha\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    api.defaults.headers.Authorization = `Baerer ${token}`;\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('userId', user.id);\n    yield put(signInSuccess(token, user));\n    history.push('/');\n  } catch (err) {\n    toast.error('Falha na autenticação, verifique seu email/senha');\n    yield put(signFailure());\n  }\n}\nexport function* signUp({\n  payload\n}) {\n  try {\n    const {\n      nome,\n      whatsapp,\n      email,\n      cpf,\n      senha\n    } = payload;\n    yield call(api.post, 'users', {\n      nome,\n      whatsapp,\n      email,\n      cpf,\n      senha\n    });\n    history.push('/');\n  } catch (err) {\n    toast.error('Falha no cadastro verifique seus dados!');\n    yield put(signFailure());\n  }\n}\nexport function setToken({\n  payload\n}) {\n  if (!payload) return;\n  const {\n    token\n  } = payload.auth;\n\n  if (token) {\n    api.defaults.headers.Authorization = `Baerer ${token}`;\n  }\n}\nexport function signOut() {\n  history.push('/');\n}\nexport default all([takeLatest('persist/REHYDRATE', setToken), takeLatest('@auth/SIGN_IN_REQUEST', signIn), takeLatest('@auth/SIGN_UP_REQUEST', signUp), takeLatest('@auth/SIGN_OUT', signOut)]);","map":{"version":3,"sources":["/home/lucaslopes/Área de Trabalho/2020.2_G4-Meubrecho-frontend/src/store/modules/auth/sagas.js"],"names":["takeLatest","call","put","all","toast","api","history","signInSuccess","signFailure","signIn","payload","email","senha","response","post","token","user","data","defaults","headers","Authorization","localStorage","setItem","id","push","err","error","signUp","nome","whatsapp","cpf","setToken","auth","signOut"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,WAA3C;AAEA,OAAO,UAAUC,MAAV,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AACnC,MAAI;AACF,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBF,OAAzB;AACA,UAAMG,QAAQ,GAAG,MAAMZ,IAAI,CAACI,GAAG,CAACS,IAAL,EAAW,UAAX,EAAuB;AAChDH,MAAAA,KADgD;AAEhDC,MAAAA;AAFgD,KAAvB,CAA3B;AAKA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBH,QAAQ,CAACI,IAAjC;AAEAZ,IAAAA,GAAG,CAACa,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASL,KAAM,EAArD;AACAM,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCP,KAAlC;AACAM,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BN,IAAI,CAACO,EAApC;AAEA,UAAMrB,GAAG,CAACK,aAAa,CAACQ,KAAD,EAAQC,IAAR,CAAd,CAAT;AAEAV,IAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACD,GAhBD,CAgBE,OAAOC,GAAP,EAAY;AACZrB,IAAAA,KAAK,CAACsB,KAAN,CAAY,kDAAZ;AACA,UAAMxB,GAAG,CAACM,WAAW,EAAZ,CAAT;AACD;AACF;AAED,OAAO,UAAUmB,MAAV,CAAiB;AAAEjB,EAAAA;AAAF,CAAjB,EAA8B;AACnC,MAAI;AACF,UAAM;AAAEkB,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBlB,MAAAA,KAAlB;AAAyBmB,MAAAA,GAAzB;AAA8BlB,MAAAA;AAA9B,QAAwCF,OAA9C;AAEA,UAAMT,IAAI,CAACI,GAAG,CAACS,IAAL,EAAW,OAAX,EAAoB;AAC5Bc,MAAAA,IAD4B;AAE5BC,MAAAA,QAF4B;AAG5BlB,MAAAA,KAH4B;AAI5BmB,MAAAA,GAJ4B;AAK5BlB,MAAAA;AAL4B,KAApB,CAAV;AAQAN,IAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACD,GAZD,CAYE,OAAOC,GAAP,EAAY;AACZrB,IAAAA,KAAK,CAACsB,KAAN,CAAY,yCAAZ;AACA,UAAMxB,GAAG,CAACM,WAAW,EAAZ,CAAT;AACD;AACF;AAED,OAAO,SAASuB,QAAT,CAAkB;AAAErB,EAAAA;AAAF,CAAlB,EAA+B;AACpC,MAAI,CAACA,OAAL,EAAc;AACd,QAAM;AAAEK,IAAAA;AAAF,MAAYL,OAAO,CAACsB,IAA1B;;AACA,MAAIjB,KAAJ,EAAW;AACTV,IAAAA,GAAG,CAACa,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASL,KAAM,EAArD;AACD;AACF;AAED,OAAO,SAASkB,OAAT,GAAmB;AACxB3B,EAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACD;AAED,eAAerB,GAAG,CAAC,CACjBH,UAAU,CAAC,mBAAD,EAAsB+B,QAAtB,CADO,EAEjB/B,UAAU,CAAC,uBAAD,EAA0BS,MAA1B,CAFO,EAGjBT,UAAU,CAAC,uBAAD,EAA0B2B,MAA1B,CAHO,EAIjB3B,UAAU,CAAC,gBAAD,EAAmBiC,OAAnB,CAJO,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '../../../services/api';\nimport history from '../../../services/history';\nimport { signInSuccess, signFailure } from './actions';\n\nexport function* signIn({ payload }) {\n  try {\n    const { email, senha } = payload;\n    const response = yield call(api.post, 'sessions', {\n      email,\n      senha\n    });\n\n    const { token, user } = response.data;\n\n    api.defaults.headers.Authorization = `Baerer ${token}`;\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('userId', user.id);\n\n    yield put(signInSuccess(token, user));\n\n    history.push('/');\n  } catch (err) {\n    toast.error('Falha na autenticação, verifique seu email/senha');\n    yield put(signFailure());\n  }\n}\n\nexport function* signUp({ payload }) {\n  try {\n    const { nome, whatsapp, email, cpf, senha } = payload;\n\n    yield call(api.post, 'users', {\n      nome,\n      whatsapp,\n      email,\n      cpf,\n      senha\n    });\n\n    history.push('/');\n  } catch (err) {\n    toast.error('Falha no cadastro verifique seus dados!');\n    yield put(signFailure());\n  }\n}\n\nexport function setToken({ payload }) {\n  if (!payload) return;\n  const { token } = payload.auth;\n  if (token) {\n    api.defaults.headers.Authorization = `Baerer ${token}`;\n  }\n}\n\nexport function signOut() {\n  history.push('/');\n}\n\nexport default all([\n  takeLatest('persist/REHYDRATE', setToken),\n  takeLatest('@auth/SIGN_IN_REQUEST', signIn),\n  takeLatest('@auth/SIGN_UP_REQUEST', signUp),\n  takeLatest('@auth/SIGN_OUT', signOut)\n]);\n"]},"metadata":{},"sourceType":"module"}